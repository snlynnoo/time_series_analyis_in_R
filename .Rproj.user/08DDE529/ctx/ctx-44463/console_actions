{
    "type": [
        2,
        2,
        3,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        2,
        3,
        3,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        3,
        3,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        3,
        3,
        3,
        0,
        1,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        2,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        2,
        2,
        2,
        2,
        2,
        3,
        3,
        0,
        1,
        2,
        2,
        2,
        2,
        2,
        0,
        1,
        2,
        2,
        2,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        3,
        0,
        1,
        2,
        2,
        2
    ],
    "data": [
        "\nR version 4.1.2 (2021-11-01) -- \"Bird Hippie\"\nCopyright (C) 2021 The R Foundation for Statistical Computing\nPlatform: x86_64-apple-darwin17.0 (64-bit)\n\nR is free software and comes with ABSOLUTELY NO WARRANTY.\nYou are welcome to redistribute it under certain conditions.\nType 'license()' or 'licence()' for distribution details.\n\n  Natural language support but running in an English locale\n\nR is a collaborative project with many contributors.\nType 'contributors()' for more information and\n'citation()' on how to cite R or R packages in publications.\n\n",
        "Type 'demo()' for some demos, 'help()' for on-line help, or\n'help.start()' for an HTML browser interface to help.\nType 'q()' to quit R.\n\n",
        "Registered S3 method overwritten by 'quantmod':\n  method            from\n  as.zoo.data.frame zoo \n",
        "[Workspace loaded from ~/OneDrive/OneDrive - Asia Pacific University/Third Semester/02. Time Series/TST_R/TST_3SEM/.RData]\n\n",
        "> ",
        "# Create training and testing datasets",
        "> ",
        "training_quakes <- quakes[1:(length(quakes)*0.8)]",
        "> ",
        "testing_quakes <- quakes[(length(quakes)*0.8+1):(length(quakes)+1)]",
        "> ",
        "# Plot both datasets",
        "> ",
        "ggplot() +",
        "+ ",
        "  geom_point(data = training_quakes, aes(x = long, y = lat, color = depth), alpha = 0.5) +",
        "+ ",
        "  geom_point(data = testing_quakes, aes(x = long, y = lat, color = depth), alpha = 0.5) +",
        "+ ",
        "  labs(x = \"Longitude\", y = \"Latitude\", color = \"Depth\")",
        "Error in ggplot() : could not find function \"ggplot\"\n",
        "> ",
        "library(ggplot2)",
        "> ",
        "# Plot both datasets",
        "> ",
        "ggplot() +",
        "+ ",
        "  geom_point(data = training_quakes, aes(x = long, y = lat, color = depth), alpha = 0.5) +",
        "+ ",
        "  geom_point(data = testing_quakes, aes(x = long, y = lat, color = depth), alpha = 0.5) +",
        "+ ",
        "  labs(x = \"Longitude\", y = \"Latitude\", color = \"Depth\")",
        "\u001B[1m\u001B[33mError\u001B[39m in \u001B[38;5;232m`fortify()`\u001B[39m:\u001B[22m\n\u001B[33m!\u001B[39m `data` must be a data frame, or other object coercible by `fortify()`, not a numeric vector.\n\u001B[90mRun `\u001B]8;;rstudio:run:rlang::last_error()\u0007rlang::last_error()\u001B]8;;\u0007` to see where the error occurred.\u001B[39m\n",
        "> ",
        "# Set up the plot",
        "> ",
        "plot(x = training_quakes$long, y = training_quakes$lat, ",
        "+ ",
        "     col = rgb(0, 0, 1, 0.5), xlab = \"Longitude\", ylab = \"Latitude\")",
        "Error in training_quakes$long : $ operator is invalid for atomic vectors\n",
        "> ",
        "points(x = testing_quakes$long, y = testing_quakes$lat, ",
        "+ ",
        "       col = rgb(1, 0.5, 0, 0.5))",
        "Error in testing_quakes$long : $ operator is invalid for atomic vectors\n",
        "> ",
        "# Add a legend",
        "> ",
        "legend(\"topright\", c(\"Training set\", \"Testing set\"), ",
        "+ ",
        "       col = c(rgb(0, 0, 1, 0.5), rgb(1, 0.5, 0, 0.5)), pch = 1, ",
        "+ ",
        "       bty = \"n\")",
        "Error in strwidth(legend, units = \"user\", cex = cex, font = text.font) : \n  plot.new has not been called yet\n",
        "> ",
        "points(x = testing_quakes, y = testing_quakes, ",
        "+ ",
        "       col = rgb(1, 0.5, 0, 0.5))",
        "Error in plot.xy(xy.coords(x, y), type = type, ...) : \n  plot.new has not been called yet\n",
        "> ",
        "# Set up the plot",
        "> ",
        "plot(x = training_quakes, y = training_quakes, ",
        "+ ",
        "     col = rgb(0, 0, 1, 0.5), xlab = \"Longitude\", ylab = \"Latitude\")",
        "> ",
        "points(x = testing_quakes, y = testing_quakes, ",
        "+ ",
        "       col = rgb(1, 0.5, 0, 0.5))",
        "> ",
        "# Add a legend",
        "> ",
        "legend(\"topright\", c(\"Training set\", \"Testing set\"), ",
        "+ ",
        "       col = c(rgb(0, 0, 1, 0.5), rgb(1, 0.5, 0, 0.5)), pch = 1, ",
        "+ ",
        "       bty = \"n\")",
        "> ",
        "# Plotting original data",
        "> ",
        "plot(Population, main = \"Malaysian Population 1970-2019\", xlab = \"Year\", ylab = \"Total Population\")",
        "> ",
        "lines(holt_pop$fitted, col=5, lwd=2) #must choose fitted",
        "> ",
        "# 80% training set",
        "> ",
        "training_quakes <- quakes[1:(length(quakes)*0.8)]",
        "> ",
        "# 80% training set",
        "> ",
        "training_quakes <- quakes[1:(length(quakes)*0.8)]",
        "> ",
        "# Split the data set into 80 % and 20%",
        "> ",
        "View(Earthquakes)",
        "> ",
        "quakes",
        "Time Series:\nStart = 1960 \nEnd = 2058 \nFrequency = 1 \n [1] 13 14  8 10 16 26 32 27 18 32 36 24 22 23 22 18 25 21 21 14  8\n[22] 11 14 23 18 17 19 20 22 19 13 26 13 14 22 24 21 22 26 21 23 24\n[43] 27 41 31 27 35 26 28 36 39 21 17 22 17 19 15 34 10 15 22 18 15\n[64] 20 15 22 19 16 30 27 29 23 20 16 21 21 25 16 18 15 18 14 10 15\n[85]  8 15  6 11  8  7 13 10 23 16 15 25 22 20 16\n",
        "> ",
        "# 80% training set",
        "> ",
        "training_quakes <- quakes[1:(length(quakes)*0.8)]",
        "> ",
        "# 20% test set",
        "> ",
        "testing_quakes <- quakes[(length(quakes)*0.8+1):(length(quakes)+1)] # must be add +1 to get till the end",
        "> ",
        "testing_quakes",
        " [1] 15 18 14 10 15  8 15  6 11  8  7 13 10 23 16 15 25 22 20 16\n",
        "> ",
        "# SES ",
        "> ",
        "library('forecast')",
        "> ",
        "ses_training_quakes <- ses(training_quakes, initial = 'simple') #if you want to optimize, don't pass any arguments",
        "> ",
        "plot(quakes)",
        "> ",
        "lines(training_quakes, col=2, lwd =2)",
        "> ",
        "plot(quakes)",
        "> ",
        "lines(training_quakes, col=2, lwd =2)",
        "> ",
        "lines(testing_quakes)",
        "> ",
        "Acf(ts_humidity)",
        "> ",
        "library('uroot')",
        "> ",
        "ch.test(ts_humidity)",
        "\n\tCanova and Hansen test for seasonal stability\n\ndata:  ts_humidity\n\n        statistic pvalue   \nSeason1    0.2442 0.2019   \nSeason2    0.4213 0.0639 . \nSeason3    0.8547 0.0044 **\nSeason4    0.4838 0.0434 * \nSeason5    0.4648 0.0488 * \nSeason6    0.1272 0.4829   \nSeason7    0.0975 0.6169   \njoint      2.0226 0.0347 * \n---\nSignif. codes: 0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 \n\nTest type: seasonal dummies \nNW covariance matrix lag order: 10 \nFirst order lag: no \nOther regressors: no  \n",
        "P-values: based on response surface regressions \n",
        "> ",
        "",
        "> ",
        "# convert to TS",
        "> ",
        "ts_humidity <- ts(data$humidity, start = c(2,1), frequency = 7)",
        "> ",
        "# TS plot",
        "> ",
        "plot(ts_humidity)",
        "> ",
        "# ADF test for stationary",
        "> ",
        "library('tseries')",
        "\n    ‘tseries’ version: 0.10-52\n\n    ‘tseries’ is a package for time series analysis and computational\n    finance.\n\n    See ‘library(help=\"tseries\")’ for details.\n\n",
        "> ",
        "adf.test(ts_humidity)",
        "\n\tAugmented Dickey-Fuller Test\n\ndata:  ts_humidity\nDickey-Fuller = -5.2431, Lag order = 7, p-value = 0.01\nalternative hypothesis: stationary\n\n",
        "Warning message:\n",
        "In adf.test(ts_humidity) :",
        " p-value smaller than printed p-value\n",
        "> ",
        "# ADF test for stationary",
        "> ",
        "library('tseries')",
        "> ",
        "adf.test(ts_humidity)",
        "\n\tAugmented Dickey-Fuller Test\n\ndata:  ts_humidity\nDickey-Fuller = -5.2431, Lag order = 7, p-value = 0.01\nalternative hypothesis: stationary\n\n",
        "Warning message:\n",
        "In adf.test(ts_humidity) :",
        " p-value smaller than printed p-value\n",
        "> ",
        "# convert to TS",
        "> ",
        "ts_humidity <- ts(data$humidity, start = c(2,1), frequency = 7)",
        "> ",
        "# TS plot",
        "> ",
        "plot(ts_humidity)",
        "> ",
        "# ADF test for stationary",
        "> ",
        "library('tseries')",
        "> ",
        "adf.test(ts_humidity)",
        "\n\tAugmented Dickey-Fuller Test\n\ndata:  ts_humidity\nDickey-Fuller = -5.2431, Lag order = 7, p-value = 0.01\nalternative hypothesis: stationary\n\n",
        "Warning message:\n",
        "In adf.test(ts_humidity) :",
        " p-value smaller than printed p-value\n",
        "> ",
        "# any trend ? ",
        "> ",
        "install.packages('trend')",
        "trying URL 'https://cran.rstudio.com/bin/macosx/contrib/4.1/trend_1.1.4.tgz'\n",
        "Content type 'application/x-gzip'",
        " length 386412 bytes (377 KB)\n",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "=",
        "\n",
        "downloaded 377 KB\n\n",
        "\nThe downloaded binary packages are in\n\t/var/folders/p2/s4s_f4sx5_z44ry3grs0jl240000gn/T//RtmphGk7TY/downloaded_packages\n",
        "> ",
        "library('trend')",
        "> ",
        "mk.test(ts_humidity)",
        "\n\tMann-Kendall trend test\n\ndata:  ts_humidity\nz = 3.8821, n = 420, p-value = 0.0001035\nalternative hypothesis: true S is not equal to 0\nsample estimates:\n           S         varS          tau \n1.115900e+04 8.261026e+06 1.269692e-01 \n\n",
        "> ",
        "length(ts_humidity)",
        "[1] 420\n",
        "> ",
        "# TS plot",
        "> ",
        "plot(ts_humidity)",
        "> ",
        "# ADF plot for stationary",
        "> ",
        "Acf(quakes, ylim=c(-1,1))",
        "> ",
        "# ADF plot for stationary",
        "> ",
        "Acf(quakes, ylim=c(-1,1))",
        "> ",
        "# ADF plot for stationary",
        "> ",
        "Acf(ts_humidity, ylim=c(-1,1))",
        "> ",
        "mk.test(ts_humidity)",
        "\n\tMann-Kendall trend test\n\ndata:  ts_humidity\nz = 3.8821, n = 420, p-value = 0.0001035\nalternative hypothesis: true S is not equal to 0\nsample estimates:\n           S         varS          tau \n1.115900e+04 8.261026e+06 1.269692e-01 \n\n",
        "> ",
        "# any seasonal ?",
        "> ",
        "# install.packages('seastests')",
        "> ",
        "library('seastests')",
        "> ",
        "isSeasonal(ts_humidity)",
        "[1] FALSE\n",
        "> ",
        "tsdisplay(ts_humidity)",
        "Error in plot.new() : figure margins too large\n",
        "> ",
        "# Close all plot windows",
        "> ",
        "dev.off()",
        "null device \n          1 \n",
        "> ",
        "tsdisplay(ts_humidity)",
        "Error in plot.new() : figure margins too large\n",
        "> ",
        "tsdisplay(ts_humidity)",
        "Error in par(def.par) : \n  invalid value specified for graphical parameter \"pin\"\n",
        "> ",
        "tsdisplay(diff(ts_humidity,1))",
        "> ",
        "tsdisplay(diff(ts_humidity,2))",
        "> ",
        "tsdisplay(diff(ts_humidity,3))",
        "> ",
        "tsdisplay(diff(ts_humidity,4))",
        "> ",
        "tsdisplay(diff(ts_humidity,1))",
        "> ",
        "ts_training <- ts(ts_humidity[1:(length(ts_humidity) * 0.8)], frequency = 7)",
        "Warning messages:\n",
        "1: ",
        "In doTryCatch(return(expr), name, parentenv, handler) :",
        "\n ",
        " display list redraw incomplete\n",
        "2: ",
        "In doTryCatch(return(expr), name, parentenv, handler) :",
        "\n ",
        " display list redraw incomplete\n",
        "3: ",
        "In doTryCatch(return(expr), name, parentenv, handler) :",
        "\n ",
        " display list redraw incomplete\n",
        "4: ",
        "In doTryCatch(return(expr), name, parentenv, handler) :",
        "\n ",
        " display list redraw incomplete\n",
        "5: ",
        "In doTryCatch(return(expr), name, parentenv, handler) :",
        "\n ",
        " display list redraw incomplete\n",
        "6: ",
        "In doTryCatch(return(expr), name, parentenv, handler) :",
        "\n ",
        " display list redraw incomplete\n",
        "> ",
        "ts_humidity",
        "Time Series:\nStart = c(2, 1) \nEnd = c(61, 7) \nFrequency = 7 \n  [1] 80.8 67.5 70.1 51.6 50.1 43.6 44.8 48.8 58.1 59.6 52.5 58.0 67.5 66.6 52.6 71.2 67.3 66.9 74.5\n [20] 61.6 47.7 45.2 55.1 54.6 61.8 61.0 56.1 65.2 64.3 64.0 62.0 60.5 62.5 52.5 52.8 52.0 52.6 48.5\n [39] 52.7 57.8 60.5 48.8 46.0 56.6 53.1 54.5 60.5 56.4 66.4 56.3 45.6 50.4 59.4 65.0 74.2 65.0 49.5\n [58] 44.2 61.8 63.7 69.4 70.8 53.3 44.5 50.0 42.2 31.5 36.3 31.8 24.5 29.2 23.8 36.6 43.6 34.2 65.8\n [77] 58.7 60.0 67.0 71.9 56.6 33.2 28.7 22.9 53.4",
        " 60.0 59.5 59.6 63.2 64.5 73.0 64.3 72.1 58.8 48.5\n [96] 44.0 35.0 24.6 26.6 23.8 45.3 45.0 18.7 25.3 27.8 37.5 43.7 41.8 50.3 60.3 61.8 38.5 40.2 51.0\n[115] 39.5 36.3 46.4 36.0 34.0 49.6 52.2 39.2 49.7 57.4 61.1 36.8 30.5 30.2 44.0 49.5 52.4 48.5 53.6\n[134] 50.9 52.0 44.5 48.7 57.2 53.1 48.3 54.7 53.5 57.8 42.0 52.0 46.0 37.0 41.6 37.6 45.4 48.7 32.6\n[153] 30.4 40.8 33.0 31.2 28.0 29.9 27.5 23.3 37.4 50.2 51.0 49.6 47.4 37.5 33.1 52.7 63.0 37.9 39.6\n[172] 35.5 27.1 41.5 47.4 50.3 53.3 50.4 64.4 58.8 51.2 51.4",
        " 56.4 65.4 61.6 52.4 48.5 44.3 50.9 53.0\n[191] 46.2 46.6 54.6 58.9 47.5 35.8 33.4 46.7 37.9 43.2 45.6 43.7 44.2 46.2 43.5 45.8 51.6 69.5 64.5\n[210] 55.5 52.3 42.3 34.8 35.4 38.1 49.8 48.4 44.2 32.7 32.0 36.3 44.0 43.6 32.5 22.3 37.3 43.2 52.2\n[229] 48.0 50.9 49.0 39.7 35.8 40.8 38.7 26.8 14.2  9.0 24.3 35.6 45.4 45.1 47.0 53.7 62.5 50.4 48.2\n[248] 47.8 39.5 48.6 50.7 44.8 47.7 49.0 60.2 59.6 56.0 44.6 55.0 51.5 53.3 50.1 43.6 38.1 48.1 49.0\n[267] 68.8 71.3 66.7 56.3 62.9 60.6 55.0 57.6 65.5 59.3 45.6 57.2 68.9",
        " 34.9 24.8 36.2 50.0 64.6 63.8\n[286] 45.9 38.4 46.9 59.0 67.7 68.3 76.3 66.5 63.0 61.6 46.5 54.1 52.0 56.0 56.3 59.6 61.6 64.1 70.0\n[305] 63.2 57.1 59.2 41.3 54.6 57.2 59.5 45.9 40.6 56.0 46.3 66.1 69.6 62.8 61.2 62.0 59.5 58.1 65.3\n[324] 63.5 57.8 58.6 49.4 58.2 57.7 56.4 61.6 62.4 50.6 56.9 58.4 65.2 68.3 66.1 65.2 64.8 57.6 63.1\n[343] 57.6 47.1 43.0 46.8 48.3 53.1 56.0 53.2 58.4 54.2 54.8 47.8 47.3 47.7 52.5 56.5 56.8 72.6 87.8\n[362] 68.8 59.1 52.6 54.9 60.7 61.1 47.1 40.3 45.4 62.7 80.5 65.5 63.3 67.2 57.6",
        " 54.3 48.0 47.9 56.3\n[381] 63.2 60.8 60.2 56.0 51.2 48.0 49.1 59.9 55.8 63.3 78.9 89.1 68.3 57.1 65.8 63.5 60.5 63.8 64.6\n[400] 62.9 65.6 65.4 54.6 49.2 51.2 57.1 64.9 58.2 47.0 44.8 36.0 27.6 70.8 71.0 66.0 63.3 67.9 73.9\n[419] 48.7 47.6\n",
        "There were 15 warnings (use warnings() to see them)",
        "\n",
        "> ",
        "ts_humidity",
        "Time Series:\nStart = c(2, 1) \nEnd = c(61, 7) \nFrequency = 7 \n  [1] 80.8 67.5 70.1 51.6 50.1 43.6 44.8 48.8 58.1 59.6 52.5 58.0 67.5 66.6 52.6 71.2 67.3 66.9 74.5\n [20] 61.6 47.7 45.2 55.1 54.6 61.8 61.0 56.1 65.2 64.3 64.0 62.0 60.5 62.5 52.5 52.8 52.0 52.6 48.5\n [39] 52.7 57.8 60.5 48.8 46.0 56.6 53.1 54.5 60.5 56.4 66.4 56.3 45.6 50.4 59.4 65.0 74.2 65.0 49.5\n [58] 44.2 61.8 63.7 69.4 70.8 53.3 44.5 50.0 42.2 31.5 36.3 31.8 24.5 29.2 23.8 36.6 43.6 34.2 65.8\n [77] 58.7 60.0 67.0 71.9 56.6 33.2 28.7 22.9 53.4",
        " 60.0 59.5 59.6 63.2 64.5 73.0 64.3 72.1 58.8 48.5\n [96] 44.0 35.0 24.6 26.6 23.8 45.3 45.0 18.7 25.3 27.8 37.5 43.7 41.8 50.3 60.3 61.8 38.5 40.2 51.0\n[115] 39.5 36.3 46.4 36.0 34.0 49.6 52.2 39.2 49.7 57.4 61.1 36.8 30.5 30.2 44.0 49.5 52.4 48.5 53.6\n[134] 50.9 52.0 44.5 48.7 57.2 53.1 48.3 54.7 53.5 57.8 42.0 52.0 46.0 37.0 41.6 37.6 45.4 48.7 32.6\n[153] 30.4 40.8 33.0 31.2 28.0 29.9 27.5 23.3 37.4 50.2 51.0 49.6 47.4 37.5 33.1 52.7 63.0 37.9 39.6\n[172] 35.5 27.1 41.5 47.4 50.3 53.3 50.4 64.4 58.8 51.2 51.4",
        " 56.4 65.4 61.6 52.4 48.5 44.3 50.9 53.0\n[191] 46.2 46.6 54.6 58.9 47.5 35.8 33.4 46.7 37.9 43.2 45.6 43.7 44.2 46.2 43.5 45.8 51.6 69.5 64.5\n[210] 55.5 52.3 42.3 34.8 35.4 38.1 49.8 48.4 44.2 32.7 32.0 36.3 44.0 43.6 32.5 22.3 37.3 43.2 52.2\n[229] 48.0 50.9 49.0 39.7 35.8 40.8 38.7 26.8 14.2  9.0 24.3 35.6 45.4 45.1 47.0 53.7 62.5 50.4 48.2\n[248] 47.8 39.5 48.6 50.7 44.8 47.7 49.0 60.2 59.6 56.0 44.6 55.0 51.5 53.3 50.1 43.6 38.1 48.1 49.0\n[267] 68.8 71.3 66.7 56.3 62.9 60.6 55.0 57.6 65.5 59.3 45.6 57.2 68.9",
        " 34.9 24.8 36.2 50.0 64.6 63.8\n[286] 45.9 38.4 46.9 59.0 67.7 68.3 76.3 66.5 63.0 61.6 46.5 54.1 52.0 56.0 56.3 59.6 61.6 64.1 70.0\n[305] 63.2 57.1 59.2 41.3 54.6 57.2 59.5 45.9 40.6 56.0 46.3 66.1 69.6 62.8 61.2 62.0 59.5 58.1 65.3\n[324] 63.5 57.8 58.6 49.4 58.2 57.7 56.4 61.6 62.4 50.6 56.9 58.4 65.2 68.3 66.1 65.2 64.8 57.6 63.1\n[343] 57.6 47.1 43.0 46.8 48.3 53.1 56.0 53.2 58.4 54.2 54.8 47.8 47.3 47.7 52.5 56.5 56.8 72.6 87.8\n[362] 68.8 59.1 52.6 54.9 60.7 61.1 47.1 40.3 45.4 62.7 80.5 65.5 63.3 67.2 57.6",
        " 54.3 48.0 47.9 56.3\n[381] 63.2 60.8 60.2 56.0 51.2 48.0 49.1 59.9 55.8 63.3 78.9 89.1 68.3 57.1 65.8 63.5 60.5 63.8 64.6\n[400] 62.9 65.6 65.4 54.6 49.2 51.2 57.1 64.9 58.2 47.0 44.8 36.0 27.6 70.8 71.0 66.0 63.3 67.9 73.9\n[419] 48.7 47.6\n",
        "> ",
        "ts_humidity",
        "Time Series:\nStart = c(2, 1) \nEnd = c(61, 7) \nFrequency = 7 \n  [1] 80.8 67.5 70.1 51.6 50.1 43.6 44.8 48.8 58.1 59.6 52.5 58.0 67.5 66.6 52.6 71.2 67.3 66.9 74.5\n [20] 61.6 47.7 45.2 55.1 54.6 61.8 61.0 56.1 65.2 64.3 64.0 62.0 60.5 62.5 52.5 52.8 52.0 52.6 48.5\n [39] 52.7 57.8 60.5 48.8 46.0 56.6 53.1 54.5 60.5 56.4 66.4 56.3 45.6 50.4 59.4 65.0 74.2 65.0 49.5\n [58] 44.2 61.8 63.7 69.4 70.8 53.3 44.5 50.0 42.2 31.5 36.3 31.8 24.5 29.2 23.8 36.6 43.6 34.2 65.8\n [77] 58.7 60.0 67.0 71.9 56.6 33.2 28.7 22.9 53.4",
        " 60.0 59.5 59.6 63.2 64.5 73.0 64.3 72.1 58.8 48.5\n [96] 44.0 35.0 24.6 26.6 23.8 45.3 45.0 18.7 25.3 27.8 37.5 43.7 41.8 50.3 60.3 61.8 38.5 40.2 51.0\n[115] 39.5 36.3 46.4 36.0 34.0 49.6 52.2 39.2 49.7 57.4 61.1 36.8 30.5 30.2 44.0 49.5 52.4 48.5 53.6\n[134] 50.9 52.0 44.5 48.7 57.2 53.1 48.3 54.7 53.5 57.8 42.0 52.0 46.0 37.0 41.6 37.6 45.4 48.7 32.6\n[153] 30.4 40.8 33.0 31.2 28.0 29.9 27.5 23.3 37.4 50.2 51.0 49.6 47.4 37.5 33.1 52.7 63.0 37.9 39.6\n[172] 35.5 27.1 41.5 47.4 50.3 53.3 50.4 64.4 58.8 51.2 51.4",
        " 56.4 65.4 61.6 52.4 48.5 44.3 50.9 53.0\n[191] 46.2 46.6 54.6 58.9 47.5 35.8 33.4 46.7 37.9 43.2 45.6 43.7 44.2 46.2 43.5 45.8 51.6 69.5 64.5\n[210] 55.5 52.3 42.3 34.8 35.4 38.1 49.8 48.4 44.2 32.7 32.0 36.3 44.0 43.6 32.5 22.3 37.3 43.2 52.2\n[229] 48.0 50.9 49.0 39.7 35.8 40.8 38.7 26.8 14.2  9.0 24.3 35.6 45.4 45.1 47.0 53.7 62.5 50.4 48.2\n[248] 47.8 39.5 48.6 50.7 44.8 47.7 49.0 60.2 59.6 56.0 44.6 55.0 51.5 53.3 50.1 43.6 38.1 48.1 49.0\n[267] 68.8 71.3 66.7 56.3 62.9 60.6 55.0 57.6 65.5 59.3 45.6 57.2 68.9",
        " 34.9 24.8 36.2 50.0 64.6 63.8\n[286] 45.9 38.4 46.9 59.0 67.7 68.3 76.3 66.5 63.0 61.6 46.5 54.1 52.0 56.0 56.3 59.6 61.6 64.1 70.0\n[305] 63.2 57.1 59.2 41.3 54.6 57.2 59.5 45.9 40.6 56.0 46.3 66.1 69.6 62.8 61.2 62.0 59.5 58.1 65.3\n[324] 63.5 57.8 58.6 49.4 58.2 57.7 56.4 61.6 62.4 50.6 56.9 58.4 65.2 68.3 66.1 65.2 64.8 57.6 63.1\n[343] 57.6 47.1 43.0 46.8 48.3 53.1 56.0 53.2 58.4 54.2 54.8 47.8 47.3 47.7 52.5 56.5 56.8 72.6 87.8\n[362] 68.8 59.1 52.6 54.9 60.7 61.1 47.1 40.3 45.4 62.7 80.5 65.5 63.3 67.2 57.6",
        " 54.3 48.0 47.9 56.3\n[381] 63.2 60.8 60.2 56.0 51.2 48.0 49.1 59.9 55.8 63.3 78.9 89.1 68.3 57.1 65.8 63.5 60.5 63.8 64.6\n[400] 62.9 65.6 65.4 54.6 49.2 51.2 57.1 64.9 58.2 47.0 44.8 36.0 27.6 70.8 71.0 66.0 63.3 67.9 73.9\n[419] 48.7 47.6\n",
        "> ",
        "ts_training <- ts(ts_humidity[1:(length(ts_humidity) * 0.8)], frequency = 7)",
        "> ",
        "ts_testing  <- ts(ts_humidity[-c(1:(length(ts_humidity) * 0.8))], frequency = 7)",
        "> ",
        "ts_humidity_ses <- ses(ts_training)",
        "There were 15 warnings (use warnings() to see them)",
        "\n",
        "> ",
        "warnings()",
        "Warning messages:\n1: In doTryCatch(return(expr), name, parentenv, handler) :\n  display list redraw incomplete\n2: In doTryCatch(return(expr), name, parentenv, handler) : invalid graphics state\n3: In doTryCatch(return(expr), name, parentenv, handler) : invalid graphics state\n4: In doTryCatch(return(expr), name, parentenv, handler) :\n  display list redraw incomplete\n5: In doTryCatch(return(expr), name, parentenv, handler) : invalid graphics state\n6: In doTryCatch(return(expr), name, parentenv, handler) : invalid graphics state",
        "\n7: In doTryCatch(return(expr), name, parentenv, handler) :\n  display list redraw incomplete\n8: In doTryCatch(return(expr), name, parentenv, handler) : invalid graphics state\n9: In doTryCatch(return(expr), name, parentenv, handler) : invalid graphics state\n10: In doTryCatch(return(expr), name, parentenv, handler) :\n  display list redraw incomplete\n11: In doTryCatch(return(expr), name, parentenv, handler) :\n  invalid graphics state\n12: In doTryCatch(return(expr), name, parentenv, handler) :\n  invalid graphics state",
        "\n13: In doTryCatch(return(expr), name, parentenv, handler) :\n  display list redraw incomplete\n14: In doTryCatch(return(expr), name, parentenv, handler) :\n  invalid graphics state\n15: In doTryCatch(return(expr), name, parentenv, handler) :\n  invalid graphics state\n\nRestarting R session...\n\n"
    ]
}